[metadata]
name = ai-media-analysis
version = 0.1.0
description = AI Media Analysis System - Comprehensive test suite
long_description = file: README.md
long_description_content_type = text/markdown
author = AI Media Analysis Team
author_email = team@ai-media-analysis.local
license = MIT
license_file = LICENSE.md
classifiers =
    Development Status :: 3 - Alpha
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: Software Development :: Testing

[options]
packages = find:
python_requires = >=3.9
include_package_data = True
zip_safe = False

[options.packages.find]
where = .
include = services*, tests*
exclude = 
    *.egg-info*
    __pycache__*
    .git*
    .pytest_cache*
    htmlcov*

# Flake8 Configuration
[flake8]
max-line-length = 88
extend-ignore = 
    # E203: whitespace before ':' (conflicts with black)
    E203,
    # W503: line break before binary operator (conflicts with black)
    W503,
    # E501: line too long (handled by black)
    E501
exclude = 
    .git,
    __pycache__,
    .pytest_cache,
    venv,
    .venv,
    build,
    dist,
    *.egg-info,
    .tox,
    htmlcov
per-file-ignores =
    # __init__.py files can have unused imports
    __init__.py:F401
    # Test files can have long lines and unused imports
    tests/*:E501,F401,F811
    # Ignore import errors in conftest.py
    conftest.py:F401,E402
max-complexity = 10
count = True
statistics = True
show-source = True

# MyPy Configuration
[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = False
disallow_incomplete_defs = False
check_untyped_defs = True
disallow_untyped_decorators = False
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
ignore_missing_imports = True
exclude = ^(venv|\.venv|build|dist|migrations|conftest\.py).*$

[mypy-tests.*]
ignore_errors = True

[mypy-*.tests.*]
ignore_errors = True

# Coverage Configuration
[coverage:run]
source = services
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */migrations/*
    */venv/*
    */.venv/*
    */build/*
    */dist/*
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov
title = AI Media Analysis - Test Coverage Report

[coverage:xml]
output = coverage.xml

# isort Configuration
[tool:isort]
profile = black
multi_line_output = 3
line_length = 88
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
skip = venv,.venv,build,dist,.git,.pytest_cache,__pycache__
known_first_party = services,tests
known_third_party = 
    pytest,
    numpy,
    torch,
    fastapi,
    langchain,
    openai,
    requests,
    pandas
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

# Pytest Configuration (backup - haupts√§chlich in pytest.ini)
[tool:pytest]
testpaths = tests services
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*
addopts = 
    -v
    --strict-markers
    --tb=short
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    slow: Slow running tests
    gpu: Tests requiring GPU
    docker: Tests requiring Docker
    api: API endpoint tests
    security: Security tests
    performance: Performance tests
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning

# Bandit Security Configuration
[bandit]
exclude_dirs = tests,venv,.venv,build,dist
skips = B101,B601 