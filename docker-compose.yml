version: '3.8'

services:
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  job_manager:
    build:
      context: ./services/job_manager
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BATCH_THRESHOLD_HOURS=4
      - MIN_JOBS_PER_BATCH=3
      - AUTO_PROCESS_JOBS=false
      - VAST_API_KEY=${VAST_API_KEY}
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
    depends_on:
      redis:
        condition: service_healthy

  job_manager_api:
    build:
      context: ./services/job_manager
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - BATCH_THRESHOLD_HOURS=4
      - MIN_JOBS_PER_BATCH=3
      - AUTO_PROCESS_JOBS=false
      - VAST_API_KEY=${VAST_API_KEY}
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
    depends_on:
      - job_manager
      - redis

  thumbnail_generator:
    build:
      context: ./services/thumbnail_generator
      dockerfile: Dockerfile
    volumes:
      - ./data:/app/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      redis:
        condition: service_healthy

  pose_estimation:
    build: 
      context: ./services/pose_estimation
      dockerfile: Dockerfile
    container_name: ai_pose_estimation
    restart: unless-stopped
    ports:
      - "8001:8000"
    volumes:
      - ./data/results:/app/results
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      redis:
        condition: service_healthy

  vision_pipeline:
    build:
      context: ./services/vision_pipeline
      dockerfile: Dockerfile
    container_name: ai_vision_pipeline
    restart: unless-stopped
    volumes:
      - ./data:/app/data
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSE_SERVICE_URL=http://pose_estimation:8000
    depends_on:
      - pose_estimation
      - redis

  ocr_detection:
    build: ./services/ocr_detection
    container_name: ai_ocr_detection
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results

  clip_nsfw:
    build: ./services/clip_nsfw
    container_name: ai_clip_nsfw
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results

  face_reid:
    build: ./services/face_reid
    container_name: ai_face_reid
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results

  whisper_transcriber:
    build: ./services/whisper_transcriber
    container_name: ai_whisper_transcriber
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results

volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      device: /data/redis

# Additional AI Modules

  pose_estimation:
    build: ./services/pose_estimation
    container_name: ai_pose_estimation
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  ocr_detection:
    build: ./services/ocr_detection
    container_name: ai_ocr_detection
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  clip_nsfw:
    build: ./services/clip_nsfw
    container_name: ai_clip_nsfw
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  face_reid:
    build: ./services/face_reid
    container_name: ai_face_reid
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  whisper_transcriber:
    build: ./services/whisper_transcriber
    container_name: ai_whisper_transcriber
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    