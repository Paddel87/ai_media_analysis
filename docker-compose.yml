version: '3.8'

services:
  data-persistence:
    build:
      context: ./setup
      dockerfile: Dockerfile.persistence
    volumes:
      - ./data:/app/data
    environment:
      - CONFIG_PATH=/app/config/persistence_config.json
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "python", "-c", "import os; assert os.path.exists('/app/data')"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - ai_network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

networks:
  ai_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  data:
    driver: local

# Weitere AI-Module können nach Bedarf im Bereich 'services:' ergänzt werden.
# Beispiel:
#   pose_estimation:
#     build: ./services/pose_estimation
#     depends_on:
#       - redis
#     volumes:
#       - ./data/results:/app/results

# Additional AI Modules

  pose_estimation:
    build: ./services/pose_estimation
    container_name: ai_pose_estimation
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  ocr_detection:
    build: ./services/ocr_detection
    container_name: ai_ocr_detection
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  clip_nsfw:
    build: ./services/clip_nsfw
    container_name: ai_clip_nsfw
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  face_reid:
    build: ./services/face_reid
    container_name: ai_face_reid
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    

  whisper_transcriber:
    build: ./services/whisper_transcriber
    container_name: ai_whisper_transcriber
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ./data/results:/app/results
    