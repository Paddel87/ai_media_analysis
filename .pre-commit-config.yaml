repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-ast
      - id: check-json
      - id: check-merge-conflict
      - id: detect-private-key

  - repo: https://github.com/psf/black
    rev: 24.2.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=88, --target-version=py311]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", "--line-length", "88"]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --ignore=E203,W503]
        additional_dependencies: [flake8-docstrings]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: [--strict, --ignore-missing-imports]

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: [--py311-plus]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.7
    hooks:
      - id: bandit
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json, css, scss, md, yaml]
        additional_dependencies:
          - prettier@4.0.0-alpha.8

  # Feature Testing Rule - Validiere Test-Anforderungen
  - repo: local
    hooks:
      - id: feature-testing-validation
        name: Validate Feature Testing Rule
        entry: scripts/validate_feature_tests.py
        language: python
        files: '^services/.*\.py$'
        exclude: '__init__\.py$|test_.*\.py$'
        always_run: false
        pass_filenames: true

      - id: test-coverage-check
        name: Check Test Coverage
        entry: bash -c 'if [ -d "tests/unit" ]; then python -m pytest tests/unit/ --cov=services --cov-fail-under=80 --quiet --disable-warnings || echo "⚠️ Coverage check skipped - no unit tests found"; fi'
        language: system
        always_run: true
        pass_filenames: false
        stages: [pre-push]
