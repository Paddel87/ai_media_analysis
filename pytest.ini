[tool:pytest]
minversion = 7.0
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test execution options
addopts =
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=services
    --cov-report=xml
    --cov-fail-under=80
    --maxfail=5

# Test markers
markers =
    unit: Unit tests - fast, isolated tests
    integration: Integration tests - tests service interactions
    e2e: End-to-end tests - full workflow tests
    slow: Slow-running tests (>30 seconds)
    performance: Performance and load tests
    smoke: Smoke tests - quick health checks
    security: Security-related tests
    api: API endpoint tests
    database: Database-related tests
    redis: Redis-related tests
    llm: LLM service tests
    video: Video processing tests
    embedding: Embedding service tests
    control: Control service tests
    job: Job manager tests

# Test timeouts (in seconds)
timeout = 300
timeout_method = thread

# Async support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Warnings configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning
    ignore:.*asyncio_default_fixture_loop_scope.*:pytest.PytestUnknownMarkWarning

# Test discovery
norecursedirs = .git .pytest_cache venv env .env build dist

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# JUnit XML for CI/CD
junit_family = xunit2

# Coverage configuration
[tool:coverage:run]
source = services
omit =
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */settings/*
    */conftest.py
    */test_*.py
    */*_test.py

[tool:coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[tool:coverage:html]
directory = htmlcov
